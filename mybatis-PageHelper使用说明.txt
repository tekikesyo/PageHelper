1.首先需要pagehelper-4.1.1.jar支持
2.在数据库配置如下：
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<!--
			reasonable：
			     3.3.0版本可用 - 分页参数合理化，默认false禁用
			     启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页
			     禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据
			supportMethodsArguments：
			     支持通过Mapper接口参数来传递分页参数
			 -->
						<value>
							dialect=mysql
							reasonable=false
							supportMethodsArguments=true
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>
3.在controller里面使用如下：
    /**
     * 获取所有消息分页
     * @return
     */
    @ResponseBody
    @RequestMapping("/getAllPrompt")
    public DataGridData getAllPrompt(Prompt prompt, int page, int rows){
        DataGridData dataGridData = new DataGridData();
        try {
            PageInfo<Prompt> pageInfo  =promptService.getAllPrompt(prompt,page,rows);
            dataGridData.setTotal(pageInfo.getTotal());
            dataGridData.setRows(pageInfo.getList());
        }catch (Exception e){
            log.error("prompt.getAllPrompt",e);
        }
        return dataGridData;
    }
 4.在service里面使用如下：
   /**
     * 列表查询，使用分页插件
     * @param prompt
     * @param page
     * @param rows
     * @return
     */
    public PageInfo<Prompt> getAllPrompt(Prompt prompt, int page, int rows) {
        PageHelper.startPage(page,rows);
        List<Prompt> list =promptMapper.findPromptByCondition(prompt);
        return new PageInfo(list);
    }
 5.完成，不需要在mybatis里面在写分页sql了，插件自动封装。